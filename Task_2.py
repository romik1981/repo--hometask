#a) Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):
#Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
#Например, число `19 ^ 3 = 6859` будем включать в сумму, так как `6 + 8 + 5 + 9 = 28` – делится нацело на `7`.
#Внимание: использовать только арифметические операции!
#b) К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
#*c) Решить задачу под пунктом b, не создавая новый список. (если будете решать - либо создайте доп. функцию, либо перепишите существующую sum_list_2)


# Вариант а)
def sum_list_1():
    dataset = []
    my_list = []
    sum_my_list = 0 # Вводим необходимые для вычисления списки и переменные
    for n in range(1, 1000, 2):
        n = n ** 3
        dataset.append(n) # Создаём список кубов нечетных чисел
        sum = 0
        k = n
        while k >= 1:
            sum += k % 10
            k = k // 10
        if sum % 7 == 0:
            my_list.append(n) # Создаем список сумма чисел членов которого делится на 7
    for indx in my_list:
        sum_my_list += indx # Вычисляем сумму членов этого списка
    return sum_my_list  # Верните значение полученной суммы

# Вариант б)

def sum_list_2():
    dataset = []
    my_list = []
    sum_my_list_1 = 0 # Вводим необходимые для вычисления списки и переменные
    for n in range(1, 1000, 2):
        n = n ** 3 + 17
        dataset.append(n) # Создаём список кубов нечетных чисел
        sum = 0
        k = n
        while k >= 1:
            sum += k % 10
            k = k // 10
        if sum % 7 == 0:
            my_list.append(n)
    for indx in my_list:
        sum_my_list_1 += indx  # Вычисляем сумму членов этого списка
    return sum_my_list_1  # Верните значение полученной суммы

# Вариант с)
# Не ясно задание я не создаю дополнительных списков в коде

result_1 = sum_list_1()
print(f'Сумма членов списка по заданию вариант а):  {result_1}')
result_2 = sum_list_2()
print(f'Сумма членов списка по заданию вариант б):  {result_2}')
print(type(result_1))
print(type(result_2))










