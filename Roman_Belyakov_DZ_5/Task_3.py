"""
Есть два списка:

tutors = [
    'Иван', 'Анастасия', 'Петр', 'Сергей',
    'Дмитрий', 'Борис', 'Елена'
]
klasses = [
    '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А'
]
Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:

('Иван', '9А')
('Анастасия', '7В')
...
Количество генерируемых кортежей не должно быть больше длины списка tutors. Если в списке klasses меньше элементов, чем
в списке tutors, необходимо вывести последние кортежи в виде: (<tutor>, None), например:

('Станислав', None)
Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения. Подумать, в каких ситуациях генератор даст эффект.

"""

tutors = ['Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена', 'Алёна', 'Егор', 'Григорий', 'Клим', 'Диана']
klasses = ['9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А', '5А', '6Б', '11Б']


def check_gen(tutors: list, klasses: list):
    for i in range(len(tutors)):
        yield tutors[i], klasses[i] if i < len(klasses) else None


generator = check_gen(tutors, klasses)
print(type(generator))

for _ in range(len(tutors)):
    print(next(generator))
# next(generator)  # если раскомментировать, то должно падать в traceback по StopIteration
